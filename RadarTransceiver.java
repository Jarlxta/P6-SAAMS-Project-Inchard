
// Generated by Together


import javax.swing.*;

/**
 * An interface to SAAMS:
 * Radar tracking of arriving and departing aircraft, and transceiver for downloading of flight descriptors
 * (by aircraft entering the local airspace) and uploading of passenger lists (to aircraft about to depart).
 * A screen simulation of the radar/transceiver system.
 * This class is a controller for the AircraftManagementDatabase: it sends messages to notify when a new aircraft is detected
 * (message contains a FlightDescriptor), and when radar contact with an aircraft is lost.
 * It also registers as an observer of the AircraftManagementDatabase, and is notified whenever any change occurs in that <<model>> element.
 * See written documentation.
 * @stereotype boundary/view/controller
 * @url element://model:project::SAAMS/design:view:::idwwyucko4qme4cko4sgxi
 * @url element://model:project::SAAMS/design:node:::id15rnfcko4qme4cko4swib.node107
 * @url element://model:project::SAAMS/design:node:::id3oolzcko4qme4cko4sx40.node167
 * @url element://model:project::SAAMS/design:view:::id3oolzcko4qme4cko4sx40
 * @url element://model:project::SAAMS/design:view:::id15rnfcko4qme4cko4swib
 */
public class RadarTransceiver {

  private final static String RT = "Radar Tranceiver";
  private final JLabel flightCode = new JLabel("Flight Code");
  private final JLabel flightTo = new JLabel("Flight To");
  private final JLabel flightFrom = new JLabel("Flight From");
  private final JLabel nextStop = new JLabel("Next Stop");
  private final JLabel passengerName = new JLabel("Passenger Name");
  private final JLabel currentPlanes = new JLabel("Current Planes");
  private final JLabel passengers = new JLabel("Passengers");

  private final JTextField flightCodeTF = new JTextField();
  private final JTextField flightToTF = new JTextField();
  private final JTextField flightFromTF = new JTextField();
  private final JTextField nextStopTF = new JTextField();
  private final JTextField passengerNameTF = new JTextField();

  private final DefaultListModel<String> passengersAdded = new DefaultListModel<>();
  private final JList passengerNameTA = new JList(passengersAdded);
  private final DefaultListModel<String> planeList = new DefaultListModel<>();
  private final JList currentPlanesTA = new JList(planeList);
  private final DefaultListModel<String> planePassengers = new DefaultListModel<>();
  private final JList planePassengersTa = new JList(planePassengers);

  private final JButton addPassenger = new JButton("Add Passenger");
  private final JButton detectFlight = new JButton("Detect Flight");
  private final JButton leaveAirspace = new JButton("Leave Airspace");



/**
  * The Radar Transceiver interface has access to the AircraftManagementDatabase.
  * @clientCardinality 1
  * @supplierCardinality 1
  * @label accesses/observes
  * @directed*/
  private AircraftManagementDatabase aircraftManagementDatabase;



}
